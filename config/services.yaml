# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  container.dumper.inline_class_loader: true

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.

  CsrDelft\:
    resource: '../lib'
    exclude: '../lib/{common,Kernel.php}'

  CsrDelft\view\table\:
    resource: '../lib/view/table'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  CsrDelft\controller\:
    resource: '../lib/controller'
    tags: ['controller.service_arguments']

  CsrDelft\model\:
    resource: '../lib/model'
    exclude: '../lib/model/entity'
    public: true # Alle modellen zijn uit de container te trekken.

  CsrDelft\view\:
    resource: '../lib/view'

  CsrDelft\view\bbcode\tag\:
    resource: '../lib/view/bbcode/tag/'
    shared: false # iedere instance is uniek
    public: true

  CsrDelft\repository\:
    resource: '../lib/repository'
    public: true # Alle repositories zijn (voor nu) uit de container te trekken.

  CsrDelft\service\:
    resource: '../lib/service'
    public: true

  CsrDelft\common\Serializer\Normalizer\:
    resource: '../lib/common/Serializer/Normalizer'
    tags:
      - { name: serializer.normalizer }

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  CsrDelft\events\ViewEventListener:
    tags:
      - { name: kernel.event_listener, event: kernel.view }

  CsrDelft\events\AccessControlEventListener:
    tags:
      - { name: kernel.event_listener, event: kernel.controller }

  CsrDelft\events\JsonBodyEventListener:
    tags:
      - { name: kernel.event_listener, event: kernel.request }

  CsrDelft\events\ApiTrustedHostsEventListener:
    tags:
      - { name: kernel.event_listener, event: kernel.request }

  CsrDelft\common\Security\PersistentTokenProvider: ~
  Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator: '@security.authenticator.form_login.main'
  Symfony\Component\Security\Http\Authentication\AuthenticatorManagerInterface: '@security.authenticator.manager.main'
  Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices: '@security.authentication.rememberme.services.persistent.main'
  CsrDelft\common\Logging\LogActivationStrategy: ~

  # Voor Zijbalk in blade templates
  CsrDelft\view\Zijbalk:
    public: true

  Psr\Container\ContainerInterface: '@service_container'

  security:
    class: Symfony\Component\Security\Core\Security
    public: true

  csr.formulier.factory:
    alias: CsrDelft\Component\Formulier\FormulierFactory

  CsrDelft\Component\Formulier\FormulierBuilder:
    shared: false # iedere instance is uniek

  CsrDelft\Component\Formulier\FormulierFactory:
    shared: false
    public: true
    arguments:
      - !tagged_locator {tag: csr.formulier.type, index_by: key}
      - '@request_stack'
      - '@CsrDelft\Component\Formulier\FormulierBuilder'

  CsrDelft\Twig\Configurator:
    decorates: 'twig.configurator.environment'

  csr.table.factory:
    alias: CsrDelft\Component\DataTable\DataTableFactory

  CsrDelft\Component\DataTable\DataTableBuilder:
    shared: false

  CsrDelft\Component\DataTable\DataTableFactory:
    public: true
    shared: false
    arguments: [!tagged_locator { tag: 'csr.table.type', index_by: 'key' }, '@CsrDelft\Component\DataTable\DataTableBuilder']

  CsrDelft\command\SponsorAffiliateDownloadCommand:
    arguments:
      - '%env(SPONSOR_SL_HOST)%'
      - '%env(SPONSOR_CLUBID)%'
      - '%env(SPONSOR_USERAGENT)%'

  CsrDelft\command\WelkomCommand:
    arguments:
      - '%env(EMAIL_PUBCIE)%'
